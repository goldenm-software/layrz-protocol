name: "Deploy versions"

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  tag-mirror:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required to access tags

      - name: Create and push mirror tags
        env:
          TAG: ${{ github.ref_name }}
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

          # Add other tag namespaces here
          for prefix in golang dart python; do
            git tag "$prefix/$TAG"
            git push origin "$prefix/$TAG"
          done

  deploy-python:
    permissions:
      id-token: write
      contents: read
      repository-projects: read
      packages: read

    runs-on: ubuntu-latest
    container:
      image: ghcr.io/goldenm-software/python-builder:uv-3.13
      options: --user root
      credentials:
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Get tag version
        run: |
          echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Build and upload
        env:
          VERSION: ${{ env.VERSION }}
        run: |
          cd python
          uv venv --python 3.13
          uv pip install build twine
          uv run python deploy.py
          uv run python -m build
          uv run python -m twine upload -u ${{ secrets.LAYRZ_PYPI_USERNAME }} -p ${{ secrets.LAYRZ_PYPI_PASSWORD }} dist/*

  deploy-dart:
    permissions:
      id-token: write
      contents: read
      repository-projects: read
      packages: read

    runs-on: ubuntu-latest
    container:
      image: ghcr.io/goldenm-software/flutter-web-builder:flutter3.35.2-uv-python3.13
      options: --user root
      credentials:
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Get tag version
        run: |
          echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Build and upload
        env:
          VERSION: ${{ env.VERSION }}
          PUB_JSON: ${{ secrets.LAYRZ_PUB_TOKEN }}
        run: |
          cd dart
          uv venv --python 3.13
          uv pip install build twine
          uv run python deploy.py
          uv run python authenticate.py
          flutter pub publish --force
